From 9263a740cdfc2816a065ca846b702a0b27a0bb13 Mon Sep 17 00:00:00 2001
From: dennisephraim <akainetteyephraim1234@gmail.com>
Date: Wed, 9 Aug 2023 18:56:32 +0000
Subject: [PATCH] made updates to meet the task requirements

---
 src/DataManipulator.ts | 34 +++++++++++++++++++++++-----------
 src/Graph.tsx          | 37 ++++++++++++++++++++++++++-----------
 2 files changed, 49 insertions(+), 22 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..e56b741 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
   timestamp: Date,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.1;
+    const lowerBound = 1 - 0.1; 
+    return {
+        price_abc: priceABC,
+        price_def: priceDEF,
+        ratio,
+        timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
+          serverResponds[0].timestamp : serverResponds[1].timestamp,
+        lower_bound: lowerBound,
+        upper_bound: upperBound,
+        trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio: undefined        
       };
-    })
-  }
-}
+    }
+  }
\ No newline at end of file
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..65186ae 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,9 +23,12 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
       timestamp: 'date',
     };
 
@@ -36,13 +39,15 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
         timestamp: 'distinct count',
       }));
     }
@@ -50,11 +55,21 @@ class Graph extends Component<IProps, {}> {
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ] as unknown as TableData);
     }
   }
 }
 
 export default Graph;
+
+// So with the thought processes to make the chart, from the ticket I had to come up with a chart that 
+// tracks the ratio between prices. The upper and lower bounds provide a way to check when there is a huge
+// stock price difference between the two stocks in question. This can be tracked using the ratio. The
+// ratio being above the upper bound or below the lower bound implies on stock price is proportionally 
+// higher than the other
+// A trader can use this to inform buying and selling strategies. When the ratio is above the upper bound, it 
+// means the trader could buy the underperforming stock or sell the over performing stock since they correlate. 
+// this is because the underperforming stock could eventually rise to make the ratio fall withing the bounds or
+// the overperforming one would fall.
\ No newline at end of file
-- 
2.40.0.windows.1

